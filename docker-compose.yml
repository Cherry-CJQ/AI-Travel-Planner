version: '3.8'

services:
  # 前端应用服务
  ai-travel-planner:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ai-travel-planner
    ports:
      - "3000:80"
    environment:
      - NODE_ENV=production
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "/healthcheck.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ai-travel-planner.rule=Host(`ai-travel-planner.local`)"
      - "traefik.http.services.ai-travel-planner.loadbalancer.server.port=80"

  # 开发环境服务
  ai-travel-planner-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: ai-travel-planner-dev
    ports:
      - "3001:3000"
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
    command: npm run dev -- --host 0.0.0.0
    stdin_open: true
    tty: true

  # 反向代理（可选）
  # traefik:
  #   image: traefik:v2.9
  #   container_name: traefik
  #   ports:
  #     - "80:80"
  #     - "8080:8080"
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #     - ./traefik.yml:/etc/traefik/traefik.yml
  #   command:
  #     - --api.insecure=true
  #     - --providers.docker=true
  #     - --providers.docker.exposedbydefault=false
  #     - --entrypoints.web.address=:80

networks:
  default:
    name: ai-travel-planner-network